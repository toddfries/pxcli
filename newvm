#!/usr/bin/perl

# Copyright (c) 2016 Todd T. Fries <todd@fries.net>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

use POSIX qw(getuid);

sub
get_next
{
	my $line;
	my @ids;
	my ($id,$name,$stat,$mem,$bootsz,$pid);
	my $rv = open(QM,"/usr/sbin/qm list|");
	if (! $rv) {
		print STDERR "cmd 'qm list' returned $rv\n";
		exit(1);
	}
	while (<QM>) {
		chomp($line=$_);
		$line =~ s/\s+$//;
		$line =~ s/^\s+//;
		$line =~ s/\s{2,}/ /g;
		if ($line =~ /^VMID/) {
			next;
		}
		($id,$name,$stat,$mem,$bootsz,$pid) = split(/ /,$line);
		my $i = { };
		$i->{id}=$id;
		$i->{name}=$name;
		$i->{stat}=$stat;
		$i->{mem}=$mem;
		$i->{bootsz}=$bootsz;
		$i->{pid}=$pid;
		push @ids,$i;
		#print STDERR "qm: ${line}\n";
	}
	close(QM);
	my $newvmid=100;
	while (1) {
		my $foundmatch=0;
		foreach my $i (@ids) {
			if ($newvmid eq $i->{id}) {
				$foundmatch=1;
				last;
			}
		}
		if (!$foundmatch) {
			last;
		}
		$newvmid++;
	}
	return $newvmid;
}

if (getuid() != 0) {
	print STDERR "newvm is pointless to run as !root, gimme more perms!\n";
	exit(1);
}

my $id = get_next();
my $padding = "";
if ($id < 10) {
	$padding .= "0";
}
if ($id < 100) {
	$padding .= "0";
}
print STDERR "newvmid available: $id\n";

my $cmd = "qm create $padding$id ";
$cmd .= "-agent 1 -autostart 1 -cores 2 -cpu host -description 'vm${id}' ";
$cmd .= "-hotplug 0 -memory 256 -onboot 1 -ostype other -serial0 socket ";
$cmd .= "-sockets 1 ";
$cmd .= "-numa 0 ";
$cmd .= "-net0 model=virtio,bridge=vmbr1 ";
$cmd .= "-ide2 file=local:iso/cd59.iso,media=cdrom ";
$cmd .= "-virtio0 file=local-zfs:vm-001-disk-1,iothread=1,size=32G ";

print "-> $cmd\n";
system($cmd);

$cmd = "zfs create -s -V 32GB rpool/data/vm-${padding}${id}-disk-1";
print "-> $cmd\n";
system($cmd);
